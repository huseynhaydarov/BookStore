services:
  postgres:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7878_Postgresql
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service
      - "10002:10002"  # Table service
    volumes:
      - azurite_data:/data
    networks:
      - app-network
  
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "3322_SQL_Pass"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserverdata:/var/opt/mssql
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ management UI
    networks:
      - app-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq


  catalogservice.webapi:
    image: ${DOCKER_REGISTRY-}catalogservicewebapi
    build:
      context: .
      dockerfile: src/Services/Catalog/CatalogService.WebApi/Dockerfile
    container_name: catalog-service
    depends_on:
      - postgres
      - rabbitmq
    environment:
      ConnectionStrings__DbConnection: "Host=postgres-db;Port=5432;Database=Catalog;Username=postgres;Password=7878_Postgresql;"
      RabbitMq__Host: "rabbitmq://rabbitmq"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
      BlobStorage: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;"
    ports:
      - "8093:8080" # Mapping port for your ASP.NET app
      - "8094:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  cartservice.api:
    image: ${DOCKER_REGISTRY-}cartserviceapi
    build:
      context: .
      dockerfile: src/Services/CartService/CartService.Api/Dockerfile
    container_name: cart-service
    depends_on:
      - sqlserver
      - rabbitmq
    environment:
      ConnectionString: "Server=sqlserver;Database=Carta;User=sa;Password=3322_SQL_Pass;TrustServerCertificate=True;"
      RabbitMq__Host: "rabbitmq://rabbitmq"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
    ports:
      - "8082:8080" # Mapping port for your ASP.NET app
      - "8083:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  identityservice:
    image: ${DOCKER_REGISTRY-}identityservice
    build:
      context: .
      dockerfile: src/Services/IdentityService/IdentityService/Dockerfile
    container_name: ids-service
    depends_on:
      - sqlserver
      - rabbitmq
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=user_management;User=sa;Password=3322_SQL_Pass;TrustServerCertificate=True;"
      ConnectionStrings__IdsDb: "Server=sqlserver;Database=identity;User=sa;Password=3322_SQL_Pass;TrustServerCertificate=True;"
      RabbitMq__Host: "rabbitmq"
      RabbitMq__VirtualHost: "/"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
      SmtpSettings__Host: "smtp.gmail.com"
      SmtpSettings__Port: 587
      SmtpSettings__EnableSsl: true
      SmtpSettings__Username: "1998venomx@gmail.com"
      SmtpSettings__Password: "vlwgzuqanyhbacda"
      SmtpSettings__From: "1998venomx@gmail.com"
    ports:
      - "8085:8080" # Mapping port for your ASP.NET app
      - "8086:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  orderservicewebapi:
    image: ${DOCKER_REGISTRY-}orderservicewebapi
    build:
      context: .
      dockerfile: src/Services/OrderService/OrderServiceWebAPI/Dockerfile
    container_name: order-service
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres-db;Port=5432;Database=OrderService;Username=postgres;Password=7878_Postgresql;"
      ConnectionStrings__Redis: "redis-cache:6379"
      RabbitMq__Host: "rabbitmq://rabbitmq"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
    ports:
      - "8080:8080" # Mapping port for your ASP.NET app
      - "8081:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  paymentservice.webapi:
    image: ${DOCKER_REGISTRY-}paymentservicewebapi
    build:
      context: .
      dockerfile: src/Services/PaymentService/PaymentService.WebApi/Dockerfile
    container_name: payment-service
    depends_on:
      - sqlserver
      - rabbitmq
    environment:
      Database: "Server=sqlserver;Database=payment;User=sa;Password=3322_SQL_Pass;TrustServerCertificate=True;"
      RabbitMq__Host: "rabbitmq"
      RabbitMq__VirtualHost: "/"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
      WebApi__LogFilesDirectory: "./log/"
      WebApi__EnableSwaggerUI: true
    ports:
      - "8087:8080" # Mapping port for your ASP.NET app
      - "8088:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  reviewservice.webapi:
    image: ${DOCKER_REGISTRY-}reviewservicewebapi
    build:
      context: .
      dockerfile: src/Services/ReviewService/ReviewService.WebApi/Dockerfile
    container_name: review-service
    depends_on:
      - sqlserver
      - rabbitmq
    environment: 
        ConnectionString: "Server=sqlserver;Database=ReviewService;User=sa;Password=3322_SQL_Pass;TrustServerCertificate=True;"
        RabbitMq__Host: "rabbitmq://rabbitmq"
        RabbitMq__Username: "guest"
        RabbitMq__Password: "guest"
    ports:
      - "8091:8080" # Mapping port for your ASP.NET app
      - "8092:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  shipmentservice.webapi:
    image: ${DOCKER_REGISTRY-}shipmentservicewebapi
    build:
      context: .
      dockerfile: src/Services/ShipmentService/ShipmentService.WebApi/Dockerfile
    container_name: shipment-service
    depends_on:
      - sqlserver
      - rabbitmq
    environment: 
        ConnectionString: "Server=sqlserver;Database=ShipmentService;User=sa;Password=3322_SQL_Pass;TrustServerCertificate=True;"
        RabbitMq__Host: "rabbitmq://rabbitmq"
        RabbitMq__Username: "guest"
        RabbitMq__Password: "guest"
    ports:
      - "8089:8080" # Mapping port for your ASP.NET app
      - "8090:8081" # Mapping port for your ASP.NET app
    networks:
      - app-network

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: src/Services/ApiGetAway/ApiGateway/Dockerfile
    environment:
      - JwtSettings__Authority=https://localhost:7167
      - JwtSettings__SecurityKey=your-very-secure-key
      - MraInfrastructure-CORS__0=http://localhost
    ports:
      - "8095:8080"
    networks:
      - app-network


volumes:
  postgres_data:
  rabbitmq_data:
  sqlserverdata:
  azurite_data:

networks:
  app-network:
    driver: bridge

